{{- $servicePort := .Values.service.port -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "webapidotnet.fullname" . }}
  labels:
    app: {{ template "webapidotnet.name" . }}
    chart: {{ template "webapidotnet.chart" . }}
    draft: {{ .Values.draft | default "draft-app" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.autoscale.minReplicas }}
  selector:
    matchLabels:
      app: {{ template "webapidotnet.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "webapidotnet.name" . }}
        draft: {{ .Values.draft | default "draft-app" }}
        release: {{ .Release.Name }}
      annotations:
        buildID: {{ .Values.buildID | default "" | quote }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ $servicePort }}
              protocol: TCP
          {{- if .Values.probes.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.probes.livenessProbe.endpoint }}
              port: http
            initialDelaySeconds: {{ .Values.probes.livenessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.probes.livenessProbe.timeoutSeconds }}
            periodSeconds: {{ .Values.probes.livenessProbe.periodSeconds }}
            {{- end }}
          {{- if .Values.probes.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: {{ .Values.probes.readinessProbe.endpoint }}
              port: http
            initialDelaySeconds: {{ .Values.probes.readinessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.probes.readinessProbe.timeoutSeconds }}
            periodSeconds: {{ .Values.probes.readinessProbe.periodSeconds }}
          {{- end }}      
          envFrom:
            - configMapRef:
                name: {{ template "webapidotnet.fullname" . }}
          env:
            {{- $root := . }}
            {{- range $ref, $values := .Values.secrets }}
            {{- range $key, $value := $values }}
            - name: {{ $ref }}_{{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ template "webapidotnet.fullname" $root }}-{{ $ref | lower }}
                  key: {{ $key }}
            {{- end }}
            {{- end }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}